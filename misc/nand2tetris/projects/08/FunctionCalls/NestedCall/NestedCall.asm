//===== FunctionCalls/NestedCall/Sys.vm =====
// L8: function Sys.init 0
(Sys.init)
// L9: push constant 4000
@4000
D=A
@SP
AM=M+1
A=A-1
M=D
// L10: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// L11: push constant 5000
@5000
D=A
@SP
AM=M+1
A=A-1
M=D
// L12: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// L13: call Sys.main 0
@5
D=A
@R13
M=D
@Sys.main
D=A
@R14
M=D
@Sys.init$lbl0.ret
D=A
@CALL_PUSH_CODE
0;JMP
(Sys.init$lbl0.ret)
// L14: pop temp 1
@SP
AM=M-1
D=M
@R6
M=D
// L15: label LOOP
(Sys.init$LOOP)
// L16: goto LOOP
@Sys.init$LOOP
0;JMP
// L26: function Sys.main 5
(Sys.main)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
M=0
A=A+1
D=A
@SP
M=D
// L27: push constant 4001
@4001
D=A
@SP
AM=M+1
A=A-1
M=D
// L28: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// L29: push constant 5001
@5001
D=A
@SP
AM=M+1
A=A-1
M=D
// L30: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// L31: push constant 200
@200
D=A
@SP
AM=M+1
A=A-1
M=D
// L32: pop local 1
@SP
AM=M-1
D=M
@LCL
A=M+1
M=D
// L33: push constant 40
@40
D=A
@SP
AM=M+1
A=A-1
M=D
// L34: pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// L35: push constant 6
@6
D=A
@SP
AM=M+1
A=A-1
M=D
// L36: pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// L37: push constant 123
@123
D=A
@SP
AM=M+1
A=A-1
M=D
// L38: call Sys.add12 1
@6
D=A
@R13
M=D
@Sys.add12
D=A
@R14
M=D
@Sys.main$lbl0.ret
D=A
@CALL_PUSH_CODE
0;JMP
(Sys.main$lbl0.ret)
// L39: pop temp 0
@SP
AM=M-1
D=M
@R5
M=D
// L40: push local 0
@LCL
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
// L41: push local 1
@LCL
A=M+1
D=M
@SP
AM=M+1
A=A-1
M=D
// L42: push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
AM=M+1
A=A-1
M=D
// L43: push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
AM=M+1
A=A-1
M=D
// L44: push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
AM=M+1
A=A-1
M=D
// L45: add
@Sys.main$lbl1
D=A
@R14
M=D
@ARITH_OP_ADD
0;JMP
(Sys.main$lbl1)
// L46: add
@Sys.main$lbl2
D=A
@R14
M=D
@ARITH_OP_ADD
0;JMP
(Sys.main$lbl2)
// L47: add
@Sys.main$lbl3
D=A
@R14
M=D
@ARITH_OP_ADD
0;JMP
(Sys.main$lbl3)
// L48: add
@Sys.main$lbl4
D=A
@R14
M=D
@ARITH_OP_ADD
0;JMP
(Sys.main$lbl4)
// L49: return
@RETURN_POP_CODE
0;JMP
// L55: function Sys.add12 0
(Sys.add12)
// L56: push constant 4002
@4002
D=A
@SP
AM=M+1
A=A-1
M=D
// L57: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// L58: push constant 5002
@5002
D=A
@SP
AM=M+1
A=A-1
M=D
// L59: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// L60: push argument 0
@ARG
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
// L61: push constant 12
@12
D=A
@SP
AM=M+1
A=A-1
M=D
// L62: add
@Sys.add12$lbl0
D=A
@R14
M=D
@ARITH_OP_ADD
0;JMP
(Sys.add12$lbl0)
// L63: return
@RETURN_POP_CODE
0;JMP
(CALL_PUSH_CODE)
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@R13
D=D-M
@ARG
M=D
@R14
A=M
0;JMP
@R15
A=M
0;JMP
(RETURN_POP_CODE)
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@R13
AM=D-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(ARITH_OP_ADD)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D+M
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_NOT)
@SP
AM=M-1
D=M
D=!D
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_LT)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D-M
@GLOBAL$lbl0.true
D;JLT
D=0
@GLOBAL$lbl0.ok
0;JMP
(GLOBAL$lbl0.true)
D=-1
(GLOBAL$lbl0.ok)
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_OR)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D|M
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_NEG)
@SP
AM=M-1
D=M
D=-D
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_EQ)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D-M
@GLOBAL$lbl1.true
D;JEQ
D=0
@GLOBAL$lbl1.ok
0;JMP
(GLOBAL$lbl1.true)
D=-1
(GLOBAL$lbl1.ok)
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_SUB)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D-M
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_AND)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D&M
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
(ARITH_OP_GT)
@SP
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=D-M
@GLOBAL$lbl2.true
D;JGT
D=0
@GLOBAL$lbl2.ok
0;JMP
(GLOBAL$lbl2.true)
D=-1
(GLOBAL$lbl2.ok)
@SP
AM=M+1
A=A-1
M=D
@R14
A=M
0;JMP
