{"video_id": "", "sku": "100002201", "video_cover": "", "author_name": "\u9648\u7693", "text_read_version": 0, "audio_size": 0, "article_cover": "https://static001.geekbang.org/resource/image/fe/30/fe6e08065318d0f6faa3284f8d55e130.jpg", "product_type": "c1", "audio_url": "", "chapter_id": "0", "column_had_sub": true, "audio_dubber": "", "is_finished": true, "neighbors": {"left": {"article_title": "36 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff087\uff09- \u57fa\u4e8e\u539f\u578b\u7684\u7f16\u7a0b\u8303\u5f0f", "id": 2741}, "right": {"article_title": "38 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff089\uff09- \u7f16\u7a0b\u7684\u672c\u8d28", "id": 2751}}, "video_height": 0, "rate_percent": 100, "article_content": "<p>\u6211\u4eec\u518d\u6765\u770bGo\u8bed\u8a00\u8fd9\u4e2a\u6a21\u5f0f\uff0cGo\u8bed\u8a00\u7684\u8fd9\u4e2a\u6a21\u5f0f\u633a\u597d\u73a9\u513f\u7684\u3002\u58f0\u660e\u4e00\u4e2astruct\uff0c\u8ddfC\u5f88\u4e00\u6837\uff0c\u7136\u540e\u76f4\u63a5\u628a\u8fd9\u4e2astruct\u7c7b\u578b\u653e\u5230\u53e6\u4e00\u4e2astruct\u91cc\u3002</p>\n<h1>\u59d4\u6258\u7684\u7b80\u5355\u793a\u4f8b</h1>\n<p>\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u793a\u4f8b\uff1a</p>\n<pre><code>type Widget struct {\n    X, Y int\n}\n\ntype Label struct {\n    Widget        // Embedding (delegation)\n    Text   string // Aggregation\n    X int         // Override \n}\n\nfunc (label Label) Paint() {\n\t// [0xc4200141e0] - Label.Paint(&quot;State&quot;)\n    fmt.Printf(&quot;[%p] - Label.Paint(%q)\\n&quot;, \n    \t&amp;label, label.Text)\n}\n</code></pre>\n<p>\u7531\u4e0a\u9762\u53ef\u77e5\uff1a</p>\n<ul>\n<li>\n<p>\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a <code>Widget</code>\uff0c\u5176\u6709 <code>X</code>\u548c<code>Y</code>\uff1b</p>\n</li>\n<li>\n<p>\u7136\u540e\u7528\u5b83\u6765\u58f0\u660e\u4e00\u4e2a <code>Label</code>\uff0c\u76f4\u63a5\u628a <code>Widget</code> \u59d4\u6258\u8fdb\u53bb\uff1b</p>\n</li>\n<li>\n<p>\u7136\u540e\u518d\u7ed9 <code>Label</code> \u58f0\u660e\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a <code>Paint()</code> \u65b9\u6cd5\u3002</p>\n</li>\n</ul>\n<p>\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u7f16\u7a0b\u4e86\uff1a</p>\n<pre><code>label := Label{Widget{10, 10}, &quot;State&quot;, 100}\n\n// X=100, Y=10, Text=State, Widget.X=10\nfmt.Printf(&quot;X=%d, Y=%d, Text=%s Widget.X=%d\\n&quot;, \n\tlabel.X, label.Y, label.Text, \n\tlabel.Widget.X)\nfmt.Println()\n// {Widget:{X:10 Y:10} Text:State X:100} \n// {{10 10} State 100}\nfmt.Printf(&quot;%+v\\n%v\\n&quot;, label, label)\n\nlabel.Paint()\n</code></pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6709\u6210\u5458\u53d8\u91cf\u91cd\u540d\uff0c\u5219\u9700\u8981\u624b\u52a8\u5730\u89e3\u51b3\u51b2\u7a81\u3002</p>\n<!-- [[[read_end]]] -->\n<p>\u6211\u4eec\u7ee7\u7eed\u6269\u5c55\u4ee3\u7801\u3002</p>\n<p>\u5148\u6765\u4e00\u4e2a <code>Button</code>\uff1a</p>\n<pre><code>type Button struct {\n    Label // Embedding (delegation)\n}\n \nfunc NewButton(x, y int, text string) Button {\n    return Button{Label{Widget{x, y}, text, x}}\n}\nfunc (button Button) Paint() { // Override\n    fmt.Printf(&quot;[%p] - Button.Paint(%q)\\n&quot;, \n    \t&amp;button, button.Text)\n}\nfunc (button Button) Click() {\n    fmt.Printf(&quot;[%p] - Button.Click()\\n&quot;, &amp;button)\n}\n</code></pre>\n<p>\u518d\u6765\u4e00\u4e2a <code>ListBox</code>\uff1a</p>\n<pre><code>type ListBox struct {\n    Widget          // Embedding (delegation)\n    Texts  []string // Aggregation\n    Index  int      // Aggregation\n}\nfunc (listBox ListBox) Paint() {\n    fmt.Printf(&quot;[%p] - ListBox.Paint(%q)\\n&quot;, \n    \t&amp;listBox, listBox.Texts)\n}\nfunc (listBox ListBox) Click() {\n    fmt.Printf(&quot;[%p] - ListBox.Click()\\n&quot;, &amp;listBox)\n}\n</code></pre>\n<p>\u7136\u540e\uff0c\u58f0\u660e\u4e24\u4e2a\u63a5\u53e3\u7528\u4e8e\u591a\u6001\uff1a</p>\n<pre><code>type Painter interface {\n    Paint()\n}\n\ntype Clicker interface {\n    Click()\n}\n</code></pre>\n<p>\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u6cdb\u578b\u5730\u4f7f\u7528\uff08\u6ce8\u610f\u5176\u4e2d\u7684\u4e24\u4e2afor\u5faa\u73af\uff09\uff1a</p>\n<pre><code>button1 := Button{Label{Widget{10, 70}, &quot;OK&quot;, 10}}\nbutton2 := NewButton(50, 70, &quot;Cancel&quot;)\nlistBox := ListBox{Widget{10, 40}, \n    []string{&quot;AL&quot;, &quot;AK&quot;, &quot;AZ&quot;, &quot;AR&quot;}, 0}\n\nfmt.Println()\n//[0xc4200142d0] - Label.Paint(&quot;State&quot;)\n//[0xc420014300] - ListBox.Paint([&quot;AL&quot; &quot;AK&quot; &quot;AZ&quot; &quot;AR&quot;])\n//[0xc420014330] - Button.Paint(&quot;OK&quot;)\n//[0xc420014360] - Button.Paint(&quot;Cancel&quot;)\nfor _, painter := range []Painter{label, listBox, button1, button2} {\n\tpainter.Paint()\n}\n\nfmt.Println()\n//[0xc420014450] - ListBox.Click()\n//[0xc420014480] - Button.Click()\n//[0xc4200144b0] - Button.Click()\nfor _, widget := range []interface{}{label, listBox, button1, button2} {\n    if clicker, ok := widget.(Clicker); ok {\n    \tclicker.Click()\n    }\n}\n</code></pre>\n<h1>\u4e00\u4e2a Undo \u7684\u59d4\u6258\u91cd\u6784</h1>\n<p>\u4e0a\u9762\u8fd9\u4e2a\u662f Go \u8bed\u4e2d\u7684\u59d4\u6258\u548c\u63a5\u53e3\u591a\u6001\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5176\u5b9e\u662f\u9762\u5411\u5bf9\u8c61\u548c\u539f\u578b\u7f16\u7a0b\u7efc\u5408\u7684\u73a9\u6cd5\u3002\u8fd9\u4e2a\u73a9\u6cd5\u53ef\u4e0d\u53ef\u4ee5\u73a9\u5f97\u66f4\u6709\u610f\u601d\u5462\uff1f\u8fd9\u662f\u53ef\u4ee5\u7684\u3002</p>\n<p>\u9996\u5148\uff0c\u6211\u4eec\u5148\u58f0\u660e\u4e00\u4e2a\u6570\u636e\u5bb9\u5668\uff0c\u5176\u4e2d\u6709 <code>Add()</code>\u3001 <code>Delete()</code> \u548c <code>Contains()</code> \u65b9\u6cd5\u3002\u8fd8\u6709\u4e00\u4e2a\u8f6c\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u3002</p>\n<pre><code>type IntSet struct {\n    data map[int]bool\n}\n\nfunc NewIntSet() IntSet {\n    return IntSet{make(map[int]bool)}\n}\n\nfunc (set *IntSet) Add(x int) {\n    set.data[x] = true\n}\n\nfunc (set *IntSet) Delete(x int) {\n    delete(set.data, x)\n}\n\nfunc (set *IntSet) Contains(x int) bool {\n    return set.data[x]\n}\n\nfunc (set *IntSet) String() string { // Satisfies fmt.Stringer interface\n    if len(set.data) == 0 {\n        return &quot;{}&quot;\n    }\n    ints := make([]int, 0, len(set.data))\n    for i := range set.data {\n        ints = append(ints, i)\n    }\n    sort.Ints(ints)\n    parts := make([]string, 0, len(ints))\n    for _, i := range ints {\n        parts = append(parts, fmt.Sprint(i))\n    }\n    return &quot;{&quot; + strings.Join(parts, &quot;,&quot;) + &quot;}&quot;\n}\n</code></pre>\n<p>\u6211\u4eec\u5982\u4e0b\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e\u5bb9\u5668\uff1a</p>\n<pre><code>ints := NewIntSet()\nfor _, i := range []int{1, 3, 5, 7} {\n    ints.Add(i)\n    fmt.Println(ints)\n}\nfor _, i := range []int{1, 2, 3, 4, 5, 6, 7} {\n    fmt.Print(i, ints.Contains(i), &quot; &quot;)\n    ints.Delete(i)\n    fmt.Println(ints)\n}\n</code></pre>\n<p>\u8fd9\u4e2a\u6570\u636e\u5bb9\u5668\u5e73\u6de1\u65e0\u5947\uff0c\u6211\u4eec\u60f3\u7ed9\u5b83\u52a0\u4e00\u4e2aUndo\u7684\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6765\uff1a</p>\n<pre><code>type UndoableIntSet struct { // Poor style\n    IntSet    // Embedding (delegation)\n    functions []func()\n}\n\nfunc NewUndoableIntSet() UndoableIntSet {\n    return UndoableIntSet{NewIntSet(), nil}\n}\n\nfunc (set *UndoableIntSet) Add(x int) { // Override\n    if !set.Contains(x) {\n        set.data[x] = true\n        set.functions = append(set.functions, func() { set.Delete(x) })\n    } else {\n        set.functions = append(set.functions, nil)\n    }\n}\n\nfunc (set *UndoableIntSet) Delete(x int) { // Override\n    if set.Contains(x) {\n        delete(set.data, x)\n        set.functions = append(set.functions, func() { set.Add(x) })\n    } else {\n        set.functions = append(set.functions, nil)\n    }\n}\n\nfunc (set *UndoableIntSet) Undo() error {\n    if len(set.functions) == 0 {\n        return errors.New(&quot;No functions to undo&quot;)\n    }\n    index := len(set.functions) - 1\n    if function := set.functions[index]; function != nil {\n        function()\n        set.functions[index] = nil // Free closure for garbage collection\n    }\n    set.functions = set.functions[:index]\n    return nil\n}\n</code></pre>\n<p>\u4e8e\u662f\u5c31\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u4e86\uff1a</p>\n<pre><code>ints := NewUndoableIntSet()\nfor _, i := range []int{1, 3, 5, 7} {\n    ints.Add(i)\n    fmt.Println(ints)\n}\nfor _, i := range []int{1, 2, 3, 4, 5, 6, 7} {\n    fmt.Println(i, ints.Contains(i), &quot; &quot;)\n    ints.Delete(i)\n    fmt.Println(ints)\n}\nfmt.Println()\nfor {\n    if err := ints.Undo(); err != nil {\n        break\n    }\n    fmt.Println(ints)\n}\n</code></pre>\n<p>\u4f46\u662f\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7528\u4e86\u4e00\u4e2a\u65b0\u7684 <code>UndoableIntSet</code> \u51e0\u4e4e\u91cd\u5199\u4e86\u6240\u6709\u7684 <code>IntSet</code> \u548c \u201c\u5199\u201d \u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u64cd\u4f5c\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e <strong>Undo</strong> \u4e86\u3002</p>\n<p>\u4f46\u662f\uff0c\u53ef\u80fd\u522b\u7684\u7c7b\u4e5f\u9700\u8981Undo\u7684\u529f\u80fd\uff0c\u6211\u662f\u4e0d\u662f\u8981\u91cd\u5199\u6240\u6709\u7684\u9700\u8981\u8fd9\u4e2a\u529f\u80fd\u7684\u7c7b\u554a\uff1f\u8fd9\u6837\u7684\u4ee3\u7801\u7c7b\u4f3c\uff0c\u5c31\u662f\u56e0\u4e3a\u6570\u636e\u5bb9\u5668\u4e0d\u4e00\u6837\uff0c\u6211\u5c31\u8981\u53bb\u91cd\u5199\u5b83\u4eec\uff0c\u8fd9\u592a\u4e8c\u4e86\u3002</p>\n<p>\u6211\u4eec\u80fd\u4e0d\u80fd\u5229\u7528\u524d\u9762\u5b66\u5230\u7684\u6cdb\u578b\u7f16\u7a0b\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\u3001IoC\u7b49\u8303\u5f0f\u6765\u628a\u8fd9\u4e2a\u4e8b\u5e72\u5f97\u597d\u4e00\u4e9b\u5462\uff1f\u5f53\u7136\u662f\u53ef\u4ee5\u7684\u3002</p>\n<p>\u5982\u4e0b\u6240\u793a\uff1a</p>\n<ul>\n<li>\n<p>\u6211\u4eec\u5148\u58f0\u660e\u4e00\u4e2a <code>Undo[]</code> \u7684\u51fd\u6570\u6570\u7ec4\uff08\u5176\u5b9e\u662f\u4e00\u4e2a\u6808\uff09\uff1b</p>\n</li>\n<li>\n<p>\u5e76\u5b9e\u73b0\u4e00\u4e2a\u901a\u7528 <code>Add()</code>\u3002\u5176\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5e76\u628a\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u5b58\u653e\u5230 <code>Undo[]</code> \u51fd\u6570\u6570\u7ec4\u4e2d\u3002</p>\n</li>\n<li>\n<p>\u5728 <code>Undo()</code> \u7684\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f1a\u904d\u5386<code>Undo[]</code>\u51fd\u6570\u6570\u7ec4\uff0c\u5e76\u6267\u884c\u4e4b\uff0c\u6267\u884c\u5b8c\u540e\u5c31\u5f39\u6808\u3002</p>\n</li>\n</ul>\n<pre><code>type Undo []func()\n\nfunc (undo *Undo) Add(function func()) {\n    *undo = append(*undo, function)\n}\n\nfunc (undo *Undo) Undo() error {\n    functions := *undo\n    if len(functions) == 0 {\n        return errors.New(&quot;No functions to undo&quot;)\n    }\n    index := len(functions) - 1\n    if function := functions[index]; function != nil {\n        function()\n        functions[index] = nil // Free closure for garbage collection\n    }\n    *undo = functions[:index]\n    return nil\n}\n\n</code></pre>\n<p>\u90a3\u4e48\u6211\u4eec\u7684 <code>IntSet</code> \u5c31\u53ef\u4ee5\u6539\u5199\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a</p>\n<pre><code>type IntSet struct {\n    data map[int]bool\n    undo Undo\n}\n\nfunc NewIntSet() IntSet {\n    return IntSet{data: make(map[int]bool)}\n}\n\n</code></pre>\n<p>\u7136\u540e\u5728\u5176\u4e2d\u7684 <code>Add</code> \u548c <code>Delete</code>\u4e2d\u5b9e\u73b0 Undo \u64cd\u4f5c\u3002</p>\n<ul>\n<li><code>Add</code> \u64cd\u4f5c\u65f6\u52a0\u5165 <code>Delete</code> \u64cd\u4f5c\u7684 Undo\u3002</li>\n<li><code>Delete</code> \u64cd\u4f5c\u65f6\u52a0\u5165 <code>Add</code> \u64cd\u4f5c\u7684 Undo\u3002</li>\n</ul>\n<pre><code>\nfunc (set *IntSet) Add(x int) {\n    if !set.Contains(x) {\n        set.data[x] = true\n        set.undo.Add(func() { set.Delete(x) })\n    } else {\n        set.undo.Add(nil)\n    }\n}\n\nfunc (set *IntSet) Delete(x int) {\n    if set.Contains(x) {\n        delete(set.data, x)\n        set.undo.Add(func() { set.Add(x) })\n    } else {\n        set.undo.Add(nil)\n    }\n}\n\nfunc (set *IntSet) Undo() error {\n    return set.undo.Undo()\n}\n\nfunc (set *IntSet) Contains(x int) bool {\n    return set.data[x]\n}\n\n</code></pre>\n<p>\u6211\u4eec\u518d\u6b21\u770b\u5230\uff0cGo\u8bed\u8a00\u7684Undo\u63a5\u53e3\u628aUndo\u7684\u6d41\u7a0b\u7ed9\u62bd\u8c61\u51fa\u6765\uff0c\u800c\u8981\u600e\u4e48Undo\u7684\u4e8b\u4ea4\u7ed9\u4e86\u4e1a\u52a1\u4ee3\u7801\u6765\u7ef4\u62a4\uff08\u901a\u8fc7\u6ce8\u518c\u4e00\u4e2aUndo\u7684\u65b9\u6cd5\uff09\u3002\u8fd9\u6837\u5728Undo\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u56de\u8c03\u8fd9\u4e2a\u65b9\u6cd5\u6765\u505a\u4e0e\u4e1a\u52a1\u76f8\u5173\u7684Undo\u64cd\u4f5c\u4e86\u3002</p>\n<h1>\u5c0f\u7ed3</h1>\n<p>\u8fd9\u662f\u4e0d\u662f\u548c\u6700\u4e00\u5f00\u59cb\u7684C++\u7684\u6cdb\u578b\u7f16\u7a0b\u5f88\u50cf\uff1f\u4e5f\u548cmap\u3001reduce\u3001filter\u8fd9\u6837\u7684\u53ea\u5173\u5fc3\u63a7\u5236\u6d41\u7a0b\uff0c\u4e0d\u5173\u5fc3\u4e1a\u52a1\u903b\u8f91\u7684\u505a\u6cd5\u5f88\u50cf\uff1f\u800c\u4e14\uff0c\u4e00\u5f00\u59cb\u7528\u4e00\u4e2aUndoableIntSet\u6765\u5305\u88c5<code>IntSet</code>\u7c7b\uff0c\u5230\u53cd\u8fc7\u6765\u5728<code>IntSet</code>\u91cc\u4f9d\u8d56<code>Undo</code>\u7c7b\uff0c\u8fd9\u5c31\u662f\u63a7\u5236\u53cd\u8f6cIoC\u3002</p>\n<p>\u4ee5\u4e0b\u662f\u300a\u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\u300b\u7cfb\u5217\u6587\u7ae0\u7684\u76ee\u5f55\uff0c\u65b9\u4fbf\u4f60\u4e86\u89e3\u8fd9\u4e00\u7cfb\u5217\u5185\u5bb9\u7684\u5168\u8c8c\u3002<strong>\u8fd9\u4e00\u7cfb\u5217\u6587\u7ae0\u4e2d\u4ee3\u7801\u91cf\u5f88\u5927\uff0c\u5f88\u96be\u7528\u97f3\u9891\u4f53\u73b0\u51fa\u6765\uff0c\u6240\u4ee5\u6ca1\u6709\u5f55\u5236\u97f3\u9891\uff0c\u8fd8\u671b\u8c05\u89e3\u3002</strong></p>\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/301\">01 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u8d77\u6e90</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/303\">02 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u6cdb\u578b\u7f16\u7a0b</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2017\">03 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u7c7b\u578b\u7cfb\u7edf\u548c\u6cdb\u578b\u7684\u672c\u8d28</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2711\">04 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u51fd\u6570\u5f0f\u7f16\u7a0b</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2723\">05 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u4fee\u9970\u5668\u6a21\u5f0f</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2729\">06 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2741\">07 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u57fa\u4e8e\u539f\u578b\u7684\u7f16\u7a0b\u8303\u5f0f</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2748\">08 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1aGo \u8bed\u8a00\u7684\u59d4\u6258\u6a21\u5f0f</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2751\">09 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u7f16\u7a0b\u7684\u672c\u8d28</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2752\">10 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u903b\u8f91\u7f16\u7a0b\u8303\u5f0f</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2754\">11 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff1a\u7a0b\u5e8f\u4e16\u754c\u91cc\u7684\u7f16\u7a0b\u8303\u5f0f</a></li>\n</ul>\n<p></p>\n", "footer_cover_data": {"img_url": "https://static001.geekbang.org/resource/image/2d/8b/2de2db52ee03f508e0d240822f31808b.png", "link_url": "", "mp_url": ""}, "article_cover_hidden": false, "is_required": true, "rate": {"2": {"cur_version": 0, "max_rate": 0, "cur_rate": 0, "is_finished": false, "total_rate": 0, "learned_seconds": 0}, "1": {"cur_version": 1543899788, "max_rate": 0, "cur_rate": 0, "is_finished": true, "total_rate": 0, "learned_seconds": 0}, "3": {"cur_version": 0, "max_rate": 0, "cur_rate": 0, "is_finished": false, "total_rate": 0, "learned_seconds": 0}}, "score": "1517871600000", "column_is_experience": false, "audio_download_url": "", "id": 2748, "had_viewed": true, "article_title": "37 | \u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff088\uff09- Go \u8bed\u8a00\u7684\u59d4\u6258\u6a21\u5f0f", "video_size": 0, "product_id": 100002201, "view_count": 13030, "is_video_preview": false, "article_summary": "Go\u901a\u8fc7\u59d4\u6258\u6269\u5c55\u539f\u6709\u7684\u529f\u80fd\uff0c\u4e0d\u5173\u5fc3\u91cc\u9762\u7684\u6570\u636e\u7c7b\u578b\u3002", "like_count": 90, "had_liked": false, "article_features": 0, "article_could_preview": false, "column_id": 48, "audio_time": "0", "article_sharetitle": "\u5de6\u8033\u6735\u8017\u5b50\u7684\u7f16\u7a0b\u8303\u5f0f\u6e38\u8bb0\uff088\uff09- Go \u8bed\u8a00\u7684\u59d4\u6258\u6a21\u5f0f", "audio_title": "", "audio_md5": "", "text_read_percent": 0, "article_subtitle": "\u65e0", "cid": 48, "video_time": "", "article_cshort": "<p>\u6211\u4eec\u518d\u6765\u770bGo\u8bed\u8a00\u8fd9\u4e2a\u6a21\u5f0f\uff0cGo\u8bed\u8a00\u7684\u8fd9\u4e2a\u6a21\u5f0f\u633a\u597d\u73a9\u513f\u7684\u3002\u58f0\u660e\u4e00\u4e2astruct\uff0c\u8ddfC\u5f88\u4e00\u6837\uff0c\u7136\u540e\u76f4\u63a5\u628a\u8fd9\u4e2astruct\u7c7b\u578b\u653e\u5230\u53e6\u4e00\u4e2astruct\u91cc\u3002</p>\n<h1>\u59d4\u6258\u7684\u7b80\u5355\u793a\u4f8b</h1>\n<p>\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u793a\u4f8b\uff1a</p>\n<pre><code>type Widget struct {\n    X, Y int\n}\n\ntype Label struct {\n    Widget        // Embedding (delegation)\n    Text   string // Aggregation\n    X int         // Override \n}\n\nfunc (label Label) Paint() {\n\t// [0xc4200141e0] - Label.Paint(&quot;State&quot;)\n    fmt.Printf(&quot;[%p] - Label.Paint(%q)\\n&quot;, \n    \t&amp;label, label.Text)\n}\n</code></pre>\n<p>\u7531\u4e0a\u9762\u53ef\u77e5\uff1a</p>\n<ul>\n<li>\n<p>\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a <code>Widget</code>\uff0c\u5176\u6709 <code>X</code>\u548c<code>Y</code>\uff1b</p>\n</li>\n<li>\n<p>\u7136\u540e\u7528\u5b83\u6765\u58f0\u660e\u4e00\u4e2a <code>Label</code>\uff0c\u76f4\u63a5\u628a <code>Widget</code> \u59d4\u6258\u8fdb\u53bb\uff1b</p>\n</li>\n<li>\n<p>\u7136\u540e\u518d\u7ed9 <code>Label</code> \u58f0\u660e\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a <code>Paint()</code> \u65b9\u6cd5\u3002</p>\n</li>\n</ul>\n<p>\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u7f16\u7a0b\u4e86\uff1a</p>\n<pre><code>label := Label{Widget{10, 10}, &quot;State&quot;, 100}\n\n// X=100, Y=10, Text=State, Widget.X=10\nfmt.Printf(&quot;X=%d, Y=%d, Text=%s Widget.X=%d\\n&quot;, \n\tlabel.X, label.Y, label.Text, \n\tlabel.Widget.X)\nfmt.Println()\n// {Widget:{X:10 Y:10} Text:State X:100} \n// {{10 10} State 100}\nfmt.Printf(&quot;%+v\\n%v\\n&quot;, label, label)\n\nlabel.Paint()\n</code></pre>\n<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6709\u6210\u5458\u53d8\u91cf\u91cd\u540d\uff0c\u5219\u9700\u8981\u624b\u52a8\u5730\u89e3\u51b3\u51b2\u7a81\u3002</p>\n", "video_width": 0, "column_could_sub": true, "article_ctime": 1517871600, "article_poster_wxlite": "https://static001.geekbang.org/render/screen/1d/ae/1dee4a6be11380816df27d25b137efae.jpeg"}